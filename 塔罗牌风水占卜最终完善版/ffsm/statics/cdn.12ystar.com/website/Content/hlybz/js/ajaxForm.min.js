!function (e) { "use strict"; function t(t) { var a = t.data; t.isDefaultPrevented() || (t.preventDefault(), e(this).ajaxSubmit(a)) } function a(t) { var a = t.target, r = e(a); if (!r.is(":submit,input:image")) { var n = r.closest(":submit"); if (0 === n.length) return; a = n[0] } var i = this; if (i.clk = a, "image" == a.type) if (void 0 !== t.offsetX) i.clk_x = t.offsetX, i.clk_y = t.offsetY; else if ("function" == typeof e.fn.offset) { var o = r.offset(); i.clk_x = t.pageX - o.left, i.clk_y = t.pageY - o.top } else i.clk_x = t.pageX - a.offsetLeft, i.clk_y = t.pageY - a.offsetTop; setTimeout(function () { i.clk = i.clk_x = i.clk_y = null }, 100) } function r() { if (e.fn.ajaxSubmit.debug) { var t = "[jquery.form] " + Array.prototype.join.call(arguments, ""); window.console && window.console.log ? window.console.log(t) : window.opera && window.opera.postError && window.opera.postError(t) } } var n = {}; n.fileapi = void 0 !== e("<input type='file'/>").get(0).files, n.formdata = void 0 !== window.FormData, e.fn.ajaxSubmit = function (t) { function a(a) { function n(e) { return e.contentWindow ? e.contentWindow.document : e.contentDocument ? e.contentDocument : e.document } function o() { function t() { try { var e = n(v).readyState; r("state = " + e), e && "uninitialized" == e.toLowerCase() && setTimeout(t, 50) } catch (e) { r("Server abort: ", e, " (", e.name, ")"), s(S), T && clearTimeout(T), T = void 0 } } var a = u.attr("target"), o = u.attr("action"); j.setAttribute("target", p), i || j.setAttribute("method", "POST"), o != f.url && j.setAttribute("action", f.url), f.skipEncodingOverride || i && !/post/i.test(i) || u.attr({ encoding: "multipart/form-data", enctype: "multipart/form-data" }), f.timeout && (T = setTimeout(function () { y = !0, s(w) }, f.timeout)); var l = []; try { if (f.extraData) for (var c in f.extraData) f.extraData.hasOwnProperty(c) && l.push(e('<input type="hidden" name="' + c + '">').attr("value", f.extraData[c]).appendTo(j)[0]); f.iframeTarget || (h.appendTo("body"), v.attachEvent ? v.attachEvent("onload", s) : v.addEventListener("load", s, !1)), setTimeout(t, 15), j.submit() } finally { j.setAttribute("action", o), a ? j.setAttribute("target", a) : u.removeAttr("target"), e(l).remove() } } function s(t) { if (!g.aborted && !M) { try { E = n(v) } catch (e) { r("cannot access response document: ", e), t = S } if (t === w && g) return void g.abort("timeout"); if (t == S && g) return void g.abort("server abort"); if (E && E.location.href != f.iframeSrc || y) { v.detachEvent ? v.detachEvent("onload", s) : v.removeEventListener("load", s, !1); var a, i = "success"; try { if (y) throw "timeout"; var o = "xml" == f.dataType || E.XMLDocument || e.isXMLDoc(E); if (r("isXml=" + o), !o && window.opera && (null === E.body || !E.body.innerHTML) && --F) return r("requeing onLoad callback, DOM not available"), void setTimeout(s, 250); var u = E.body ? E.body : E.documentElement; g.responseText = u ? u.innerHTML : null, g.responseXML = E.XMLDocument ? E.XMLDocument : E, o && (f.dataType = "xml"), g.getResponseHeader = function (e) { return { "content-type": f.dataType }[e] }, u && (g.status = Number(u.getAttribute("status")) || g.status, g.statusText = u.getAttribute("statusText") || g.statusText); var l = (f.dataType || "").toLowerCase(), c = /(json|script|text)/.test(l); if (c || f.textarea) { var m = E.getElementsByTagName("textarea")[0]; if (m) g.responseText = m.value, g.status = Number(m.getAttribute("status")) || g.status, g.statusText = m.getAttribute("statusText") || g.statusText; else if (c) { var p = E.getElementsByTagName("pre")[0], x = E.getElementsByTagName("body")[0]; p ? g.responseText = p.textContent ? p.textContent : p.innerText : x && (g.responseText = x.textContent ? x.textContent : x.innerText) } } else "xml" == l && !g.responseXML && g.responseText && (g.responseXML = X(g.responseText)); try { L = _(g, l, f) } catch (t) { i = "parsererror", g.error = a = t || i } } catch (t) { r("error caught: ", t), i = "error", g.error = a = t || i } g.aborted && (r("upload aborted"), i = null), g.status && (i = g.status >= 200 && g.status < 300 || 304 === g.status ? "success" : "error"), "success" === i ? (f.success && f.success.call(f.context, L, "success", g), d && e.event.trigger("ajaxSuccess", [g, f])) : i && (void 0 === a && (a = g.statusText), f.error && f.error.call(f.context, g, i, a), d && e.event.trigger("ajaxError", [g, f, a])), d && e.event.trigger("ajaxComplete", [g, f]), d && !--e.active && e.event.trigger("ajaxStop"), f.complete && f.complete.call(f.context, g, i), M = !0, f.timeout && clearTimeout(T), setTimeout(function () { f.iframeTarget || h.remove(), g.responseXML = null }, 100) } } } var l, c, f, d, p, h, v, g, x, b, y, T, j = u[0], k = !!e.fn.prop; if (e(":input[name=submit],:input[id=submit]", j).length) return void alert('Error: Form elements must not have name or id of "submit".'); if (a) for (c = 0; c < m.length; c++) l = e(m[c]), k ? l.prop("disabled", !1) : l.removeAttr("disabled"); if (f = e.extend(!0, {}, e.ajaxSettings, t), f.context = f.context || f, p = "jqFormIO" + (new Date).getTime(), f.iframeTarget ? (h = e(f.iframeTarget), b = h.attr("name"), b ? p = b : h.attr("name", p)) : (h = e('<iframe name="' + p + '" src="' + f.iframeSrc + '" />'), h.css({ position: "absolute", top: "-1000px", left: "-1000px" })), v = h[0], g = { aborted: 0, responseText: null, responseXML: null, status: 0, statusText: "n/a", getAllResponseHeaders: function () { }, getResponseHeader: function () { }, setRequestHeader: function () { }, abort: function (t) { var a = "timeout" === t ? "timeout" : "aborted"; r("aborting upload... " + a), this.aborted = 1, h.attr("src", f.iframeSrc), g.error = a, f.error && f.error.call(f.context, g, a, t), d && e.event.trigger("ajaxError", [g, f, a]), f.complete && f.complete.call(f.context, g, a) } }, d = f.global, d && 0 == e.active++ && e.event.trigger("ajaxStart"), d && e.event.trigger("ajaxSend", [g, f]), f.beforeSend && !1 === f.beforeSend.call(f.context, g, f)) return void (f.global && e.active--); if (!g.aborted) { x = j.clk, x && (b = x.name) && !x.disabled && (f.extraData = f.extraData || {}, f.extraData[b] = x.value, "image" == x.type && (f.extraData[b + ".x"] = j.clk_x, f.extraData[b + ".y"] = j.clk_y)); var w = 1, S = 2, D = e("meta[name=csrf-token]").attr("content"), A = e("meta[name=csrf-param]").attr("content"); A && D && (f.extraData = f.extraData || {}, f.extraData[A] = D), f.forceSync ? o() : setTimeout(o, 10); var L, E, M, F = 50, X = e.parseXML || function (e, t) { return window.ActiveXObject ? (t = new ActiveXObject("Microsoft.XMLDOM"), t.async = "false", t.loadXML(e)) : t = (new DOMParser).parseFromString(e, "text/xml"), t && t.documentElement && "parsererror" != t.documentElement.nodeName ? t : null }, O = e.parseJSON || function (e) { return window.eval("(" + e + ")") }, _ = function (t, a, r) { var n = t.getResponseHeader("content-type") || "", i = "xml" === a || !a && n.indexOf("xml") >= 0, o = i ? t.responseXML : t.responseText; return i && "parsererror" === o.documentElement.nodeName && e.error && e.error("parsererror"), r && r.dataFilter && (o = r.dataFilter(o, a)), "string" == typeof o && ("json" === a || !a && n.indexOf("json") >= 0 ? o = O(o) : ("script" === a || !a && n.indexOf("javascript") >= 0) && e.globalEval(o)), o } } } if (!this.length) return r("ajaxSubmit: skipping submit process - no element selected"), this; var i, o, s, u = this; "function" == typeof t && (t = { success: t }), i = this.attr("method"), o = this.attr("action"), s = "string" == typeof o ? e.trim(o) : "", s = s || window.location.href || "", s && (s = (s.match(/^([^#]+)/) || [])[1]), t = e.extend(!0, { url: s, success: e.ajaxSettings.success, type: i || "GET", iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank" }, t); var l = {}; if (this.trigger("form-pre-serialize", [this, t, l]), l.veto) return r("ajaxSubmit: submit vetoed via form-pre-serialize trigger"), this; if (t.beforeSerialize && !1 === t.beforeSerialize(this, t)) return r("ajaxSubmit: submit aborted via beforeSerialize callback"), this; var c = t.traditional; void 0 === c && (c = e.ajaxSettings.traditional); var f, m = [], d = this.formToArray(t.semantic, m); if (t.data && (t.extraData = t.data, f = e.param(t.data, c)), t.beforeSubmit && !1 === t.beforeSubmit(d, this, t)) return r("ajaxSubmit: submit aborted via beforeSubmit callback"), this; if (this.trigger("form-submit-validate", [d, this, t, l]), l.veto) return r("ajaxSubmit: submit vetoed via form-submit-validate trigger"), this; var p = e.param(d, c); f && (p = p ? p + "&" + f : f), "GET" == t.type.toUpperCase() ? (t.url += (t.url.indexOf("?") >= 0 ? "&" : "?") + p, t.data = null) : t.data = p; var h = []; if (t.resetForm && h.push(function () { u.resetForm() }), t.clearForm && h.push(function () { u.clearForm(t.includeHidden) }), !t.dataType && t.target) { var v = t.success || function () { }; h.push(function (a) { var r = t.replaceTarget ? "replaceWith" : "html"; e(t.target)[r](a).each(v, arguments) }) } else t.success && h.push(t.success); t.success = function (e, a, r) { for (var n = t.context || t, i = 0, o = h.length; i < o; i++) h[i].apply(n, [e, a, r || u, u]) }; var g = e("input:file:enabled[value]", this), x = g.length > 0, b = "multipart/form-data", y = u.attr("enctype") == b || u.attr("encoding") == b, T = n.fileapi && n.formdata; r("fileAPI :" + T); var j = (x || y) && !T; !1 !== t.iframe && (t.iframe || j) ? t.closeKeepAlive ? e.get(t.closeKeepAlive, function () { a(d) }) : a(d) : (x || y) && T ? function (a) { for (var r = new FormData, n = 0; n < a.length; n++) r.append(a[n].name, a[n].value); if (t.extraData) for (var i in t.extraData) t.extraData.hasOwnProperty(i) && r.append(i, t.extraData[i]); t.data = null; var o = e.extend(!0, {}, e.ajaxSettings, t, { contentType: !1, processData: !1, cache: !1, type: "POST" }); t.uploadProgress && (o.xhr = function () { var e = jQuery.ajaxSettings.xhr(); return e.upload && (e.upload.onprogress = function (e) { var a = 0, r = e.loaded || e.position, n = e.total; e.lengthComputable && (a = Math.ceil(r / n * 100)), t.uploadProgress(e, r, n, a) }), e }), o.data = null; var s = o.beforeSend; o.beforeSend = function (e, t) { t.data = r, s && s.call(this, e, t) }, e.ajax(o) }(d) : e.ajax(t); for (var k = 0; k < m.length; k++) m[k] = null; return this.trigger("form-submit-notify", [this, t]), this }, e.fn.ajaxForm = function (n) { if (n = n || {}, n.delegation = n.delegation && e.isFunction(e.fn.on), !n.delegation && 0 === this.length) { var i = { s: this.selector, c: this.context }; return !e.isReady && i.s ? (r("DOM not ready, queuing ajaxForm"), e(function () { e(i.s, i.c).ajaxForm(n) }), this) : (r("terminating; zero elements found by selector" + (e.isReady ? "" : " (DOM not ready)")), this) } return n.delegation ? (e(document).off("submit.form-plugin", this.selector, t).off("click.form-plugin", this.selector, a).on("submit.form-plugin", this.selector, n, t).on("click.form-plugin", this.selector, n, a), this) : this.ajaxFormUnbind().bind("submit.form-plugin", n, t).bind("click.form-plugin", n, a) }, e.fn.ajaxFormUnbind = function () { return this.unbind("submit.form-plugin click.form-plugin") }, e.fn.formToArray = function (t, a) { var r = []; if (0 === this.length) return r; var i = this[0], o = t ? i.getElementsByTagName("*") : i.elements; if (!o) return r; var s, u, l, c, f, m, d; for (s = 0, m = o.length; s < m; s++) if (f = o[s], l = f.name) { if ("application/x-shockwave-flash" == f.type) return; if (t && i.clk && "image" == f.type) f.disabled || i.clk != f || (r.push({ name: l, value: e(f).val(), type: f.type }), r.push({ name: l + ".x", value: i.clk_x }, { name: l + ".y", value: i.clk_y })); else if ((c = e.fieldValue(f, !0)) && c.constructor == Array) for (a && a.push(f), u = 0, d = c.length; u < d; u++) r.push({ name: l, value: c[u] }); else if (n.fileapi && "file" == f.type && !f.disabled) { a && a.push(f); var p = f.files; if (p.length) for (u = 0; u < p.length; u++) r.push({ name: l, value: p[u], type: f.type }); else r.push({ name: l, value: "", type: f.type }) } else null !== c && void 0 !== c && (a && a.push(f), r.push({ name: l, value: c, type: f.type, required: f.required })) } if (!t && i.clk) { var h = e(i.clk), v = h[0]; l = v.name, l && !v.disabled && "image" == v.type && (r.push({ name: l, value: h.val() }), r.push({ name: l + ".x", value: i.clk_x }, { name: l + ".y", value: i.clk_y })) } return r }, e.fn.formSerialize = function (t) { return e.param(this.formToArray(t)) }, e.fn.fieldSerialize = function (t) { var a = []; return this.each(function () { var r = this.name; if (r) { var n = e.fieldValue(this, t); if (n && n.constructor == Array) for (var i = 0, o = n.length; i < o; i++) a.push({ name: r, value: n[i] }); else null !== n && void 0 !== n && a.push({ name: this.name, value: n }) } }), e.param(a) }, e.fn.fieldValue = function (t) { for (var a = [], r = 0, n = this.length; r < n; r++) { var i = this[r], o = e.fieldValue(i, t); null === o || void 0 === o || o.constructor == Array && !o.length || (o.constructor == Array ? e.merge(a, o) : a.push(o)) } return a }, e.fieldValue = function (t, a) { var r = t.name, n = t.type, i = t.tagName.toLowerCase(); if (void 0 === a && (a = !0), a && (!r || t.disabled || "reset" == n || "button" == n || ("checkbox" == n || "radio" == n) && !t.checked || ("submit" == n || "image" == n) && t.form && t.form.clk != t || "select" == i && -1 == t.selectedIndex)) return null; if ("select" == i) { var o = t.selectedIndex; if (o < 0) return null; for (var s = [], u = t.options, l = "select-one" == n, c = l ? o + 1 : u.length, f = l ? o : 0; f < c; f++) { var m = u[f]; if (m.selected) { var d = m.value; if (d || (d = m.attributes && m.attributes.value && !m.attributes.value.specified ? m.text : m.value), l) return d; s.push(d) } } return s } return e(t).val() }, e.fn.clearForm = function (t) { return this.each(function () { e("input,select,textarea", this).clearFields(t) }) }, e.fn.clearFields = e.fn.clearInputs = function (t) { var a = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i; return this.each(function () { var r = this.type, n = this.tagName.toLowerCase(); a.test(r) || "textarea" == n ? this.value = "" : "checkbox" == r || "radio" == r ? this.checked = !1 : "select" == n ? this.selectedIndex = -1 : t && (!0 === t && /hidden/.test(r) || "string" == typeof t && e(this).is(t)) && (this.value = "") }) }, e.fn.resetForm = function () { return this.each(function () { ("function" == typeof this.reset || "object" == typeof this.reset && !this.reset.nodeType) && this.reset() }) }, e.fn.enable = function (e) { return void 0 === e && (e = !0), this.each(function () { this.disabled = !e }) }, e.fn.selected = function (t) { return void 0 === t && (t = !0), this.each(function () { var a = this.type; if ("checkbox" == a || "radio" == a) this.checked = t; else if ("option" == this.tagName.toLowerCase()) { var r = e(this).parent("select"); t && r[0] && "select-one" == r[0].type && r.find("option").selected(!1), this.selected = t } }) }, e.fn.ajaxSubmit.debug = !1 }(jQuery);